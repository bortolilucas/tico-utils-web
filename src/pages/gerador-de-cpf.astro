---
import { actions } from "astro:actions";

import Button from "@/components/Button.astro";
import Card from "@/components/Card.astro";
import Select from "@/components/Select.astro";
import SelectOptions from "@/components/SelectOptions.astro";
import GenerateIcon from "@/assets/icons/generate.svg";
import { ufOptions, yesOrNoOptions } from "@/data/selectOptions.ts";
import MainLayout from "@/layout/MainLayout.astro";
import { isInputError } from "astro:actions";
import { isActionError } from "astro:actions";
import ErrorMessage from "@/components/ErrorMessage.astro";

export const prerender = false;

const result = Astro.getActionResult(actions.generateCpf);
const inputErrors = isInputError(result?.error) ? result.error.fields : {};
const actionError = isActionError(result?.error) ? result.error.message : null;
---

<MainLayout enableClientRouter>
  <Card>
    <h2 class="text-3xl font-bold text-gray-900 mb-2">Gerador de CPF</h2>
    <p class="text-gray-600 mb-8">
      Gere um CPF válido com um clique. Escolha se deseja incluir os "pontos" ou
      não.
    </p>

    <form
      id="generateCpfForm"
      method="POST"
      action={actions.generateCpf}
      class="max-w-4xl"
    >
      <div class="grid grid-cols-1 md:grid-cols-2 gap-8 mb-8">
        <SelectOptions
          transition:persist
          label="Pontuação? (Ex: 123.456.789-09)"
          name="punctuation"
          options={yesOrNoOptions}
          error={inputErrors.punctuation?.[0]}
          defaultValue={result?.data?.formData.punctuation ??
            yesOrNoOptions[0].value}
        />

        <Select
          transition:persist
          label="Estado de Origem do CPF"
          name="state"
          options={ufOptions}
          error={inputErrors.state?.[0]}
          defaultValue={result?.data?.formData.state ?? ufOptions[0].value}
        />
      </div>

      {actionError && <ErrorMessage>{actionError}</ErrorMessage>}

      <Button type="submit" class="w-full">
        <GenerateIcon />
        GERAR CPF
      </Button>
    </form>

    {
      result?.data?.cpf && (
        <div class="mt-8 p-4 bg-green-50 border border-green-200 rounded-lg">
          <h3 class="text-xl font-semibold text-green-800 mb-2">CPF Gerado</h3>
          <p class="text-green-900 text-lg">{result.data.cpf}</p>
        </div>
      )
    }
  </Card>
</MainLayout>

<script>
  import { handleFormSubmit } from "@/utils/forms";

  handleFormSubmit("generateCpfForm");
</script>
